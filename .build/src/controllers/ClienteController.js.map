{
  "version": 3,
  "sources": ["../../../src/controllers/ClienteController.ts"],
  "sourcesContent": ["import { Request, Response } from 'express'\nimport { clienteRepository } from '../repositories/clienteRepository'\n\nexport class ClienteController {\n  async create(req: Request, res: Response) {\n\n    var { nome, cpf, endereco, cidade, estado, telefone, email, dataNascimento, ativo } = req.body;\n\n    try {\n      const novoCliente = clienteRepository.create({ nome, cpf, endereco, cidade, estado, telefone, email, dataNascimento, ativo })\n      await clienteRepository.save(novoCliente)\n\n      return res.status(201).json(novoCliente)\n    } catch (error) {\n      console.log(error)\n      return res.status(500).json({ message: 'Internal Sever Error' })\n    }\n  }\n\n  async findAll(req: Request, res: Response) {\n    try {\n      const cliente = await clienteRepository.find({})\n\n      if (!cliente) {\n        return res.status(404).json({ message: 'Nenhum cliente encontrado !' })\n      }\n\n      return res.status(200).json(cliente)\n    } catch (error) {\n      console.log(error)\n      return res.status(500).json({ message: 'Internal Sever Error' })\n    }\n  }\n\n  async findById(req: Request, res: Response) {\n    const { id_cliente } = req.params;\n\n    try {\n      const cliente = await clienteRepository.find({\n        where: {\n          id_cliente: Number(id_cliente)\n        }\n      })\n\n      if (!cliente) {\n        return res.status(404).json({ message: 'Cliente n\u00E3o encontrado' })\n      }\n\n      return res.status(200).json(cliente)\n    } catch (error) {\n      console.log(error)\n      return res.status(500).json({ message: 'Internal Sever Error' })\n    }\n  }\n\n  async update(req: Request, res: Response) {\n    const { id_cliente } = req.params;\n    const { nome, cpf, endereco, cidade, estado, telefone, email, dataNascimento, ativo } = req.body\n\n    try {\n      const cliente: any = await clienteRepository.findOneBy({\n        id_cliente: Number(id_cliente)\n      })\n\n      if (!cliente) {\n        return res.status(404).json({ message: 'Cliente n\u00E3o encontrado' })\n      }\n\n      clienteRepository.update(cliente, { nome, cpf, endereco, cidade, estado, telefone, email, dataNascimento, ativo });\n\n      return res.status(200).end()\n    } catch (error) {\n      console.log(error)\n      return res.status(500).json({ message: 'Internal Sever Error' })\n    }\n  }\n\n  async delete(req: Request, res: Response) {\n    const { id_cliente } = req.params;\n\n\n    if (!(await clienteRepository.findOneBy({ id_cliente: Number(id_cliente) }))) {\n      return res.status(404).json({ message: 'Usu\u00E1rio n\u00E3o encontrado' })\n    }\n\n    await clienteRepository.delete({ id_cliente: Number(id_cliente) })\n\n    return res.status(204).send()\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,+BAAkC;AAE3B,wBAAwB;AAAA,QACvB,OAAO,KAAc,KAAe;AAExC,QAAI,EAAE,MAAM,KAAK,UAAU,QAAQ,QAAQ,UAAU,OAAO,gBAAgB,UAAU,IAAI;AAE1F,QAAI;AACF,YAAM,cAAc,2CAAkB,OAAO,EAAE,MAAM,KAAK,UAAU,QAAQ,QAAQ,UAAU,OAAO,gBAAgB;AACrH,YAAM,2CAAkB,KAAK;AAE7B,aAAO,IAAI,OAAO,KAAK,KAAK;AAAA,aACrB,OAAP;AACA,cAAQ,IAAI;AACZ,aAAO,IAAI,OAAO,KAAK,KAAK,EAAE,SAAS;AAAA;AAAA;AAAA,QAIrC,QAAQ,KAAc,KAAe;AACzC,QAAI;AACF,YAAM,UAAU,MAAM,2CAAkB,KAAK;AAE7C,UAAI,CAAC,SAAS;AACZ,eAAO,IAAI,OAAO,KAAK,KAAK,EAAE,SAAS;AAAA;AAGzC,aAAO,IAAI,OAAO,KAAK,KAAK;AAAA,aACrB,OAAP;AACA,cAAQ,IAAI;AACZ,aAAO,IAAI,OAAO,KAAK,KAAK,EAAE,SAAS;AAAA;AAAA;AAAA,QAIrC,SAAS,KAAc,KAAe;AAC1C,UAAM,EAAE,eAAe,IAAI;AAE3B,QAAI;AACF,YAAM,UAAU,MAAM,2CAAkB,KAAK;AAAA,QAC3C,OAAO;AAAA,UACL,YAAY,OAAO;AAAA;AAAA;AAIvB,UAAI,CAAC,SAAS;AACZ,eAAO,IAAI,OAAO,KAAK,KAAK,EAAE,SAAS;AAAA;AAGzC,aAAO,IAAI,OAAO,KAAK,KAAK;AAAA,aACrB,OAAP;AACA,cAAQ,IAAI;AACZ,aAAO,IAAI,OAAO,KAAK,KAAK,EAAE,SAAS;AAAA;AAAA;AAAA,QAIrC,OAAO,KAAc,KAAe;AACxC,UAAM,EAAE,eAAe,IAAI;AAC3B,UAAM,EAAE,MAAM,KAAK,UAAU,QAAQ,QAAQ,UAAU,OAAO,gBAAgB,UAAU,IAAI;AAE5F,QAAI;AACF,YAAM,UAAe,MAAM,2CAAkB,UAAU;AAAA,QACrD,YAAY,OAAO;AAAA;AAGrB,UAAI,CAAC,SAAS;AACZ,eAAO,IAAI,OAAO,KAAK,KAAK,EAAE,SAAS;AAAA;AAGzC,iDAAkB,OAAO,SAAS,EAAE,MAAM,KAAK,UAAU,QAAQ,QAAQ,UAAU,OAAO,gBAAgB;AAE1G,aAAO,IAAI,OAAO,KAAK;AAAA,aAChB,OAAP;AACA,cAAQ,IAAI;AACZ,aAAO,IAAI,OAAO,KAAK,KAAK,EAAE,SAAS;AAAA;AAAA;AAAA,QAIrC,OAAO,KAAc,KAAe;AACxC,UAAM,EAAE,eAAe,IAAI;AAG3B,QAAI,CAAE,MAAM,2CAAkB,UAAU,EAAE,YAAY,OAAO,gBAAiB;AAC5E,aAAO,IAAI,OAAO,KAAK,KAAK,EAAE,SAAS;AAAA;AAGzC,UAAM,2CAAkB,OAAO,EAAE,YAAY,OAAO;AAEpD,WAAO,IAAI,OAAO,KAAK;AAAA;AAAA;",
  "names": []
}
